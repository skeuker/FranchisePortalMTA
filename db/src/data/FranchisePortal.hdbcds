context FranchisePortal {

    //type definitions
    table type error {
        HTTP_STATUS_CODE : Integer;
        ERROR_MESSAGE    : hana.NCHAR(100);
    };

    // event
    entity Event {
        key eventID           : String(32);
            eventText         : String(80);
            validityStartDate : LocalDate;
            validitEndDate    : LocalDate;
            thumbNailUrl      : String(120);
            orderRequests     : association[1, 0..*] to OrderRequestHeader on orderRequests.eventID = eventID;
            products          : association[1, 0..*] to EventProduct       on products.eventID = eventID;
    }
    technical configuration {
        column store;
    };

    // event products
    entity EventProduct {
        key eventID      : type of Event.eventID;
        key productID    : String(32);
            productText  : String(40);
            thumbNailUrl : String(120);
            baseMerchCat : String(20);
            packSize     : Integer;
            packPrice    : Decimal(10, 2);
            dealPrice    : Decimal(10, 2);
            barCode      : String(20);
            event        : association[1, 1..1] to Event on event.eventID = eventID;
    }
    technical configuration {
        column store;
    };

    // event shopping cart
    entity EventShoppingCartItem {
        key eventID      : type of Event.eventID;
        key productID    : String(32);
            productText  : String(40);
            thumbNailUrl : String(120);
            baseMerchCat : String(20);
            packSize     : Integer;
            packPrice    : Decimal(10, 2);
            dealPrice    : Decimal(10, 2);
            barCode      : String(20);
            quantity     : Integer;
            event        : association[1, 0..*] to Event on event.eventID = eventID;
    }
    technical configuration {
        column store;
    };
    
    //application parameters
    entity ApplicationParameter {
        key parameterID    : String(20);
            parameterText : String(40);
    }
    technical configuration {
        column store;
    };

    //user application parameters
    entity UserApplicationParameter {
        key userID         : String(40);
        key parameterID    : type of ApplicationParameter.parameterID;
            parameterValue : String(20);
    }
    technical configuration {
        column store;
    };

    //store
    entity Store {
        key storeID : String(4);
    }
    technical configuration {
        column store;
    };

    //order request header
    entity OrderRequestHeader {
        key orderRequestID    : String(32);
            eventID           : type of Event.eventID;
            storeID           : type of Store.storeID;
            externalOrderID   : String(10);
            orderRequestItems : association[1, 1..*] to OrderRequestItem on orderRequestItems.orderRequestID = orderRequestID;
            event             : association[1, 1..1] to Event            on event.eventID = eventID;
    }
    technical configuration {
        column store;
    };

    //order request item
    entity OrderRequestItem {
        key orderRequestID     : type of OrderRequestHeader.orderRequestID;
        key itemID             : hana.SMALLINT;
            productID          : type of EventProduct.productID;
            quantity           : Integer;
            orderRequestHeader : association[1, 1..1] to OrderRequestHeader on orderRequestHeader.orderRequestID = orderRequestID;
    }
    technical configuration {
        column store;
    };

    //document
    entity Document {
        key documentID      : String(32);
            documentType    : String(80);
            fileName        : String(100);
            fileType        : String(80);
            mimeType        : String(80);
            documentContent : LargeString null;
    }
    technical configuration {
        column store;
    };

    //document stream
    entity DocumentStream {
        key documentID      : type of Document.documentID;
            documentContent : LargeString;
    }
    technical configuration {
        column store;
    };

    //document type
    entity DocumentType {
        key documentTypeID   : String(10);
            documentTypeText : String(40);
    }
    technical configuration {
        column store;
    };

    //document types
    view DocumentTypes as
        select from DocumentType
        {
            documentTypeID,
            documentTypeText
        }
        with structured privilege check;

    //active events for current date
    view ActiveEvents as
        select from     Event 
        {
            eventID,
            eventText,
            thumbNailUrl
        }
        where
                validitEndDate    <= current_date
            and validityStartDate >= current_date
        with structured privilege check;

    //store order requests
    view StoreOrderRequests as
        select from OrderRequestHeader
        {
            orderRequestID,
            eventID,
            storeID
        }
        with structured privilege check;
};